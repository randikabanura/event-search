type Query {
    findAverages: GenericCounter
    findAll( first: Int = 25, offset: Int = 0): [EventDetail]!
    eventDetailById(id: ID): EventDetail
    search(query: String!, first: Int = 25, offset: Int = 0): [EventDetail]!
}

type EventDetail {
    id: ID
    TypeMessage: String
    Node: Node
    Agg: Agg
    Event: Event
}

type key_value{
    key: String
    value: String
}

type Event {
    Topic: String
    Params: String
}

type Agg {
    Name: String
    IPAddress: String
    Id: String
}

type Node {
    Name: String
    IPAddress: String
    Plugins: String
}

type GenericCounter {
    noOfCameras: Float
    noOfEvents: Float
    noOfLocations: Float
    noOfMotionDetectors: Float
}